.26 * (-15)
(.26 * (-15)) + (.74 * 5)
R.Version()
pbinom(507,111,.2)
pnorm(700, mean=507, sd=111)
pnorm(700,507,111)
1-pnorm(700,507,111)
pnorm(65,mean=65,sd=2.8)
pnorm(65,mean=69,sd=2.8)
1-pnorm(75,69,2.8)
pnorm(72,69,2.8)-(1-pnorm(66,69,2.8))
pnorm(72,69,2.8)
pnorm(66,69,2.8)
pnorm(75,69,2.8)
pnorm(72,69,2.8)
pnorm(66,69,2.8)
1-pnorm(66,69,2.8)
pnorm(72,69,2.8)-(1-pnorm(66,69,2.8))
pnorm(72,69,2.8)
1-pnorm(66,69,2.8)
pnorm(72,69,2.8)
pnorm(66,69,2.8)
1-pnorm(66,69,2.8)
1-pnorm(75,69,2.8)
pnorm(65,mean=69,sd=2.8)
pnorm(72,69,2.8)-pnorm(66,69,2.8)
qnorm(0.98, mean=507, sd=111)
help(pnorm)
qnorm(.005,69,2.8)
1-qnorm(.0025,69,2.8)
qnorm(.9975,69,2.8)
qnorm(.9975,69,2.8)
qnorm(.005,69,2.8)
qnorm(.9975,69,2.8)
pnorm(8,20,.5)
pnorm(8,20,2.24)
pnorm(30.5,22.5,sd=4.5)
1 - pnorm(30.5,22.5,sd=4.5)
library(jsonlite)
library(tidyverse)
library(rwebppl)
install.packages("rwebppl")
library(jsonlite)
library(tidyverse)
library(rwebppl)
install.packages("rwebppl")
R.Version()
R.Version()
R.Version()
R.version()
R. Version()
R.Version()
# load required packages
library(tidyverse)
library(tidybayes)
library(brms)
library(emmeans)
library(lme4)
library(lmerTest)
library(xtable)
# set working directory to directory of script
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
# load helper functions
source('../../../helpers.R')
# load cleaned data
d = read_csv("../data/cd.csv")
nrow(d)
length(unique(d$participantID)) #71 participants
# exclude controls
t = d %>%
filter(!(expression == "controlBad" | expression == "controlGood"))
table(t$expression)
# set reference level
t = t %>%
mutate(expression = fct_relevel(expression, "be right"))
levels(t$expression)
# response distribution before transformation
summary(t$response)
# first, because response assumes values of 0 and 1, which beta regression cannot handle, transform: (Smithson & Verkuilen 2006)
# y_new = (y_old * (nâˆ’1) + 0.5) / n (where n is the sample size)
# note: first rescaling of y'=(y-a)/(b-a) not necessary because highest and lowest value are 0 and 1 already
t$betaresponse = (t$response*(nrow(t)-1) + .5)/nrow(t)
summary(t$betaresponse)
# fit the model
prior = get_prior(betaresponse ~ expression + (1|participantID) + (1|cc),family = Beta(),data=t)
prior
# set priors
priors = c(set_prior("cauchy(0, .001)", class = "b"))
betamodel = bf(betaresponse ~ expression + (1|participantID) + (1|cc),
phi ~ expression + (1|participantID) + (1|cc), # beta distribution's precision
family = Beta())
m.b = brm(formula = betamodel,
family=Beta(),
data=t,
prior = priors,
cores = 4, iter = 3000, warmup = 500,
control = list(adapt_delta = .97, max_treedepth=18))
