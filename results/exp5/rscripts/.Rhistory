droplevels()
nrow(d.MC.AI) #1500
# group not-at-issueness mean (all participants, all clauses)
round(mean(d.MC.AI$response),2) #.22
# set working directory to directory of script
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
# load required packages
library(tidyverse)
# load helpers
source('../../helpers.R')
# set theme
theme_set(theme_bw())
# read in the raw data
d = read_csv("../data/experiment-trials.csv")
nrow(d) #13052 / 251 = 52 trials (the experiment was done 251 times)
head(d)
summary(d)
length(unique(d$workerid)) #251
# read in the subject information
ds = read_csv("../data/experiment-subject_information.csv")
length(unique(ds$workerid)) #251
nrow(ds) #251
head(ds)
summary(d)
# look at participants' comments
unique(ds$comments)
# merge subject information into data
d = d %>%
left_join(ds, by=c("workerid"))
# participant info
table(d$age) #18-74
length(which(is.na(d$age))) # 52 missing values
mean(d$age,na.rm=TRUE) #31.7
d %>%
select(gender, workerid) %>%
unique() %>%
group_by(gender) %>%
summarize(count=n())
# change the response for ai condition so that what was 0/not-at-issue is now 1/not-at-issue
# by subtracting the ai responses from 1
table(d$question_type,d$response)
d[d$question_type == "ai",]$response = 1 - d[d$question_type == "ai",]$response
# make a trial number
unique(d$slide_number_in_experiment) #slide numbers from 5 to 57
d$trial = d$slide_number_in_experiment - 4
unique(d$trial) # trial numbers from 1 to 53 (27 missing because instruction)
d[d$trial > 26,]$trial = d[d$trial > 26,]$trial - 1
unique(d$trial) # trials from 1 to 52
### exclude non-American English speakers
length(unique(d$workerid)) #251
length(which(is.na(d$language))) #no missing responses
table(d$language)
# exclude anybody who didn't include English among languages spoken
d <- d %>%
filter(language != "Korean" & language != "Hmong" & language != "Spanish") %>%
droplevels()
length(unique(d$workerid)) #248 (data from 3 participants excluded)
# exclude non-American English speakers
length(unique(d$workerid))# 248
length(which(is.na(d$american))) #0
table(d$american)
d <- d %>%
filter(american == "Yes") %>%
droplevels()
length(unique(d$workerid)) #247 (data from 1 participant excluded)
# main clauses
names(d)
d.MC <- d %>%
filter(short_trigger == "MC") %>%
droplevels()
nrow(d.MC) #2964 / 247 participants = 12 (6 main clause controls in each of the two blocks)
# projection of main clause data
table(d$question_type)
d.MC.Proj <- d.MC %>%
filter(question_type == "projective") %>%
droplevels()
nrow(d.MC.Proj) #1482
# group projection mean (all participants, all clauses)
round(mean(d.MC.Proj$response),2) #.96
# calculate each participants mean response to the projection of main clauses
p.means = d.MC.Proj %>%
group_by(workerid) %>%
summarize(Mean = mean(response), CI.Low=ci.low(response), CI.High=ci.high(response)) %>%
ungroup() %>%
mutate(YMin = Mean-CI.Low, YMax = Mean+CI.High)
ggplot(p.means, aes(x=workerid,y=Mean)) +
geom_point() +
geom_errorbar(aes(ymin=YMin, ymax=YMax))+
geom_text(aes(label=workerid), vjust = 1, cex= 5)+
ylab("Projection response mean")
# ai of main clause data
d.MC.AI <- d.MC %>%
filter(question_type == "ai") %>%
droplevels()
nrow(d.MC.AI) #1482
# group not-at-issueness mean (all participants, all clauses)
round(mean(d.MC.AI$response),2) #.25
# set working directory to directory of script
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
# load required packages
library(tidyverse)
# load helpers
source('../../helpers.R')
# set theme
theme_set(theme_bw())
# read in the raw data
d = read_csv("../data/experiment-trials.csv")
nrow(d) #13000 / 250 = 52 trials (the experiment was done 250 times, as planned)
head(d)
summary(d)
length(unique(d$workerid)) #249
# read in the subject information
ds = read_csv("../data/experiment-subject_information.csv")
length(unique(ds$workerid)) #249
nrow(ds) #250
head(ds)
summary(ds)
# look at participants' comments
unique(ds$comments)
# merge subject information into data
d = d %>%
left_join(ds, by=c("workerid"))
# remove data from participant 1877 since no information on which was first take
d <- d %>%
filter(workerid != "1877") %>%
droplevels()
length(unique(d$workerid)) #248
# participant info
table(d$age) #18-69
str(d$age)
# turn non-numeric age information into NA
d$age <- as.numeric(as.character(d$age))
table(d$age)
length(which(is.na(d$age))) # 0 missing values
mean(d$age,na.rm=TRUE) #33.2
d %>%
select(gender, workerid) %>%
unique() %>%
group_by(gender) %>%
summarize(count=n())
# change the response for ai condition so that what was 0/not-at-issue is now 1/not-at-issue
# by subtracting the ai responses from 1
table(d$question_type,d$response)
d[d$question_type == "ai",]$response = 1 - d[d$question_type == "ai",]$response
# make a trial number
unique(d$slide_number_in_experiment) #slide numbers from 5 to 57
d$trial = d$slide_number_in_experiment - 4
unique(d$trial) # trial numbers from 1 to 53 (27 missing because instruction)
d[d$trial > 26,]$trial = d[d$trial > 26,]$trial - 1
unique(d$trial) # trials from 1 to 52
### exclude non-American English speakers
length(unique(d$workerid)) #248
length(which(is.na(d$language))) #no missing responses
table(d$language)
# exclude non-American English speakers
length(unique(d$workerid))# 248
length(which(is.na(d$american))) #52
table(d$american)
d <- d %>%
filter(american == "Yes") %>%
droplevels()
length(unique(d$workerid)) #244 (data from 4 participants excluded)
# main clauses
names(d)
d.MC <- d %>%
filter(short_trigger == "MC") %>%
droplevels()
nrow(d.MC) #2928 / 244 participants = 12 (6 main clause controls in each of the two blocks)
# projection of main clause data
table(d$question_type)
d.MC.Proj <- d.MC %>%
filter(question_type == "projective") %>%
droplevels()
nrow(d.MC.Proj) #1464
# group projection mean (all participants, all clauses)
round(mean(d.MC.Proj$response),2) #.96
# calculate each participants mean response to the projection of main clauses
p.means = d.MC.Proj %>%
group_by(workerid) %>%
summarize(Mean = mean(response), CI.Low=ci.low(response), CI.High=ci.high(response)) %>%
ungroup() %>%
mutate(YMin = Mean-CI.Low, YMax = Mean+CI.High)
ggplot(p.means, aes(x=workerid,y=Mean)) +
geom_point() +
geom_errorbar(aes(ymin=YMin, ymax=YMax))+
geom_text(aes(label=workerid), vjust = 1, cex= 5)+
ylab("Projection response mean")
# ai of main clause data
d.MC.AI <- d.MC %>%
filter(question_type == "ai") %>%
droplevels()
nrow(d.MC.AI) #1464
# group not-at-issueness mean (all participants, all clauses)
round(mean(d.MC.AI$response),2) #.22
# set working directory to directory of script
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
# load required packages
library(tidyverse)
# load helpers
source('../../helpers.R')
# set theme
theme_set(theme_bw())
# read in the raw data
d = read_csv("../data/experiment-trials.csv")
nrow(d) #13000 / 250 = 52 trials (the experiment was done 250 times, as planned)
head(d)
summary(d)
length(unique(d$workerid)) #250
# read in the subject information
ds = read_csv("../data/experiment-subject_information.csv")
length(unique(ds$workerid)) #250
nrow(ds) #250
head(ds)
summary(d)
# look at participants' comments
unique(ds$comments)
# merge subject information into data
d = d %>%
left_join(ds, by=c("workerid"))
# participant info
table(d$age) #18-66
length(which(is.na(d$age))) #52 missing values
mean(d$age,na.rm=TRUE) #32.4
d %>%
select(gender, workerid) %>%
unique() %>%
group_by(gender) %>%
summarize(count=n())
# change the response for ai condition so that what was 0/not-at-issue is now 1/not-at-issue
# by subtracting the ai responses from 1
table(d$question_type,d$response)
d[d$question_type == "ai",]$response = 1 - d[d$question_type == "ai",]$response
# make a trial number
unique(d$slide_number_in_experiment) #slide numbers from 5 to 57
d$trial = d$slide_number_in_experiment - 4
unique(d$trial) # trial numbers from 1 to 53 (27 missing because instruction)
d[d$trial > 26,]$trial = d[d$trial > 26,]$trial - 1
unique(d$trial) # trials from 1 to 52
### exclude non-American English speakers
length(unique(d$workerid)) #250
length(which(is.na(d$language))) #156 missing responses
table(d$language)
# exclude anybody who didn't include English among languages spoken
d <- d %>%
filter(language != "Spanish") %>%
droplevels()
length(unique(d$workerid)) #246 (data from 3 participant excluded)
# exclude non-American English speakers
length(unique(d$workerid))# 246
length(which(is.na(d$american))) #0
table(d$american)
d <- d %>%
filter(american == "Yes") %>%
droplevels()
length(unique(d$workerid)) #245 (data from 1 participants excluded)
# main clauses
names(d)
d.MC <- d %>%
filter(short_trigger == "MC") %>%
droplevels()
nrow(d.MC) #2940 / 245 participants = 12 (6 main clause controls in each of the two blocks)
# projection of main clause data
table(d$question_type)
d.MC.Proj <- d.MC %>%
filter(question_type == "projective") %>%
droplevels()
nrow(d.MC.Proj) #1470
# group projection mean (all participants, all clauses)
round(mean(d.MC.Proj$response),2) #.17
# calculate each participants mean response to the projection of main clauses
p.means = d.MC.Proj %>%
group_by(workerid) %>%
summarize(Mean = mean(response), CI.Low=ci.low(response), CI.High=ci.high(response)) %>%
ungroup() %>%
mutate(YMin = Mean-CI.Low, YMax = Mean+CI.High)
ggplot(p.means, aes(x=workerid,y=Mean)) +
geom_point() +
geom_errorbar(aes(ymin=YMin, ymax=YMax))+
geom_text(aes(label=workerid), vjust = 1, cex= 5)+
ylab("Projection response mean")
# ai of main clause data
d.MC.AI <- d.MC %>%
filter(question_type == "ai") %>%
droplevels()
nrow(d.MC.AI) #1470
# group not-at-issueness mean (all participants, all clauses)
round(mean(d.MC.AI$response),2) #.28
# set working directory to directory of script
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
# load required packages
library(tidyverse)
# load helpers
source('../../helpers.R')
# set theme
theme_set(theme_bw())
# read in the raw data
d = read_csv("../data/experiment-trials.csv")
nrow(d) #13000 / 250 = 52 trials (the experiment was done 250 times, as planned)
head(d)
summary(d)
length(unique(d$workerid)) #250
# read in the subject information
ds = read_csv("../data/experiment-subject_information.csv")
length(unique(ds$workerid)) #250
nrow(ds) #250
head(ds)
summary(d)
# look at participants' comments
unique(ds$comments)
# merge subject information into data
d = d %>%
left_join(ds, by=c("workerid"))
# participant info
table(d$age) #18-58
length(which(is.na(d$age))) # 0 missing values
mean(d$age,na.rm=TRUE) #25.5
d %>%
select(gender, workerid) %>%
unique() %>%
group_by(gender) %>%
summarize(count=n())
# change the response for ai condition so that what was 0/not-at-issue is now 1/not-at-issue
# by subtracting the ai responses from 1
table(d$question_type,d$response)
d[d$question_type == "ai",]$response = 1 - d[d$question_type == "ai",]$response
# make a trial number
unique(d$slide_number_in_experiment) #slide numbers from 5 to 57
d$trial = d$slide_number_in_experiment - 4
unique(d$trial) # trial numbers from 1 to 53 (27 missing because instruction)
d[d$trial > 26,]$trial = d[d$trial > 26,]$trial - 1
unique(d$trial) # trials from 1 to 52
### exclude non-American English speakers
length(unique(d$workerid)) #250
length(which(is.na(d$language))) #no missing responses
table(d$language)
# exclude anybody who didn't include English among languages spoken
d <- d %>%
filter(language != "Korean") %>%
droplevels()
length(unique(d$workerid)) #249 (data from 1 participant excluded)
# exclude non-American English speakers
length(unique(d$workerid))# 249
length(which(is.na(d$american))) #52
table(d$american)
d <- d %>%
filter(american == "Yes") %>%
droplevels()
length(unique(d$workerid)) #245 (data from 4 participants excluded)
# main clauses
names(d)
d.MC <- d %>%
filter(short_trigger == "MC") %>%
droplevels()
nrow(d.MC) #2940 / 245 participants = 12 (6 main clause controls in each of the two blocks)
# projection of main clause data
table(d$question_type)
d.MC.Proj <- d.MC %>%
filter(question_type == "projective") %>%
droplevels()
nrow(d.MC.Proj) #1470
# group projection mean (all participants, all clauses)
round(mean(d.MC.Proj$response),2) #.18
# calculate each participants mean response to the projection of main clauses
p.means = d.MC.Proj %>%
group_by(workerid) %>%
summarize(Mean = mean(response), CI.Low=ci.low(response), CI.High=ci.high(response)) %>%
ungroup() %>%
mutate(YMin = Mean-CI.Low, YMax = Mean+CI.High)
ggplot(p.means, aes(x=workerid,y=Mean)) +
geom_point() +
geom_errorbar(aes(ymin=YMin, ymax=YMax))+
geom_text(aes(label=workerid), vjust = 1, cex= 5)+
ylab("Projection response mean")
# ai of main clause data
d.MC.AI <- d.MC %>%
filter(question_type == "ai") %>%
droplevels()
nrow(d.MC.AI) #1470
# group not-at-issueness mean (all participants, all clauses)
round(mean(d.MC.AI$response),2) #.07
# set working directory to directory of script
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
# load required packages
library(tidyverse)
# load helpers
source('../../helpers.R')
# set theme
theme_set(theme_bw())
# read in the raw data
d = read_csv("../data/experiment-trials.csv")
nrow(d) #15600 / 300 = 52 trials (the experiment was done 300 times, as planned)
head(d)
summary(d) #289 unique workerids
length(unique(d$workerid)) #289
# count of how often each Turker did the experiment
count = d %>%
dplyr :: select(workerid) %>%
group_by(workerid) %>%
tally(sort=T)
count
View(count)
# remove data from Turkers who took the experiment more than once
workers = d %>%
group_by(workerid) %>%
count() %>%
filter(n == 52) %>%
droplevels()
workers
View(workers)
# remove data from Turkers who took the experiment more than once
workers = d %>%
group_by(workerid) %>%
count() %>%
filter(n == 52) %>%
droplevels()
workers
d = d %>%
filter(workerid %in% as.character(workers$workerid))
length(unique(d$workerid)) #284
nrow(d) #14768 / 52 = 284 (5 Turkers did the experiment more than once, for a total of 16 times)
# read in the subject information
ds = read_csv("../data/experiment-subject_information.csv")
length(unique(ds$workerid)) #289 (as above: 11 times no new workerid)
nrow(ds) #300
head(ds)
summary(d) # experiment took 9 minutes (median), 10 minutes (mean)
# look at Turkers' comments
unique(ds$comments)
workers = ds %>%
group_by(workerid) %>%
count() %>%
filter(n < 2) %>%
droplevels()
workers
ds = ds %>%
filter(workerid %in% as.character(workers$workerid))
length(unique(ds$workerid)) #284
nrow(ds) #284
# merge subject information into data
d = d %>%
left_join(ds, by=c("workerid"))
# age info (for all 284 unique Turkers that participated)
table(d$age) #19-74
mean(d$age) #38
ggplot(d, aes(x=age)) +
geom_histogram()
nrow(d) #14768 / 52 = 284
# change the response for ai condition so that what was 0/not-at-issue is now 1/not-at-issue
# by subtracting the ai responses from 1
table(d$question_type,d$response)
d[d$question_type == "ai",]$response = 1 - d[d$question_type == "ai",]$response
# make a trial number
unique(d$slide_number_in_experiment) #slide numbers from 5 to 57
d$trial = d$slide_number_in_experiment - 4
unique(d$trial) # trial numbers from 1 to 53 (27 missing because instruction)
d[d$trial > 26,]$trial = d[d$trial > 26,]$trial - 1
unique(d$trial) # trials from 1 to 52
### exclude non-American English speakers
length(unique(d$workerid)) #284
length(which(is.na(d$language))) #no missing responses
table(d$language)
# exclude anybody who didn't include English among languages spoken
d <- d %>%
filter(language != "Spanish" & language != "Korean" & language != "romanian"
& language != "United States") %>%
droplevels()
length(unique(d$workerid)) #280 (data from 4 Turkers excluded)
# exclude non-American English speakers
length(unique(d$workerid))# 280
length(which(is.na(d$american))) #0 (everybody responded)
table(d$american)
d <- d %>%
filter(american == "Yes") %>%
droplevels()
length(unique(d$workerid)) #277 (data from 3 Turkers excluded)
# main clauses
names(d)
d.MC <- d %>%
filter(short_trigger == "MC") %>%
droplevels()
nrow(d.MC) #3324 / 277 Turkers = 12 (6 main clause controls in each of the two blocks)
# projection of main clause data
table(d$question_type)
d.MC.Proj <- d.MC %>%
filter(question_type == "projective") %>%
droplevels()
nrow(d.MC.Proj) #1662 / 277 Turkers = 6 main clause controls in projection block
# group projection mean (all Turkers, all clauses)
round(mean(d.MC.Proj$response),2) #.14
# calculate each Turkers mean response to the projection of main clauses
p.means = d.MC.Proj %>%
group_by(workerid) %>%
summarize(Mean = mean(response), CI.Low=ci.low(response), CI.High=ci.high(response)) %>%
ungroup() %>%
mutate(YMin = Mean-CI.Low, YMax = Mean+CI.High)
ggplot(p.means, aes(x=workerid,y=Mean)) +
geom_point() +
geom_errorbar(aes(ymin=YMin, ymax=YMax))+
geom_text(aes(label=workerid), vjust = 1, cex= 5)+
ylab("Projection response mean")
# ai of main clause data
d.MC.AI <- d.MC %>%
filter(question_type == "ai") %>%
droplevels()
nrow(d.MC.AI) #1662 / 277 Turkers = 6 main clause controls in ai block
# group not-at-issueness mean (all Turkers, all clauses)
round(mean(d.MC.AI$response),2) #.05
